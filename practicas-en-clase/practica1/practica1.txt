1. Insertar un alumno mujer con dos materias y padre de apellido "Torres".
db.alumnos.insertOne({
  nombres: "Maria Fernanda",
  apellidos: "Torres",
  sexo: "F",
  casado: false,
  fecha_nacimiento: new Date("2002-09-15"),
  materias: ["MAT101", "FIS200"],
  padre: {
    nombre: "Javier",
    apellido: "Torres"
  }
})


2. Insertar cinco alumnos a la vez con datos variados.
db.alumnos.insertMany([
  {
    nombres: 'Juan',
    apellidos: 'Pérez García',
    sexo: 'M',
    casado: false,
    fecha_nacimiento: ISODate('1995-07-21T10:15:30.000Z'),
    materias: ['SIS256', 'MAT101'],
    padre: { nombre: 'Carlos', apellido: 'Pérez' }
  },
  {
    nombres: 'María',
    apellidos: 'López Sánchez',
    sexo: 'F',
    casado: true,
    fecha_nacimiento: ISODate('1992-05-12T08:45:00.000Z'),
    materias: ['COM350', 'SIS256'],
    padre: { nombre: 'Jorge', apellido: 'López' }
  },
  {
    nombres: 'Luis',
    apellidos: 'Torres Mendoza',
    sexo: 'M',
    casado: false,
    fecha_nacimiento: ISODate('1998-11-03T14:20:10.000Z'),
    materias: ['MAT101', 'FIS200'],
    padre: { nombre: 'Héctor', apellido: 'Torres' }
  },
  {
    nombres: 'Andrea',
    apellidos: 'Martínez Ruiz',
    sexo: 'F',
    casado: false,
    fecha_nacimiento: ISODate('1996-09-25T18:50:20.000Z'),
    materias: ['SIS256', 'COM350', 'MAT101'],
    padre: { nombre: 'Felipe', apellido: 'Martínez' }
  },
  {
    nombres: 'Paula',
    apellidos: 'Ramírez Flores',
    sexo: 'F',
    casado: true,
    fecha_nacimiento: ISODate('1993-03-16T16:32:45.483Z'),
    materias: ['SIS00', 'COM350', 'SIS256'],
    padre: { nombre: 'Daniel', apellido: 'Flores' }
  }
])


3. Insertar un alumno sin campo padre.
db.alumnos.insertOne({
  nombres: "Carlos Andrés",
  apellidos: "Mendoza Ríos",
  sexo: "M",
  casado: false,
  fecha_nacimiento: new Date("2001-05-20"),
  materias: ["HIS101", "LIT202"]
})


4. Insertar un alumno hombre casado, nacido en 1990.
db.alumnos.insertOne({
  nombres: "Miguel",
  apellidos: "Fernandez",
  sexo: "M",
  casado: true,
  fecha_nacimiento: ISODate("1990-04-15T10:00:00.000Z"),
  materias: ["SIS256", "MAT200"],
  padre: { nombre: "José", apellido: "Fernandez" }
})


5. Insertar un alumno con 4 materias y padre "Carlos Pérez".
db.alumnos.insertOne({
  nombres: "Andrés Felipe",
  apellidos: "García Morales",
  sexo: "M",
  casado: true,
  fecha_nacimiento: new Date("1999-11-08"),
  materias: ["MAT101", "FIS202", "PRO301", "ING104"],
  padre: {
    nombre: "Carlos",
    apellido: "Pérez"
  }
})


6. Insertar un alumno solo con "COM350" como materia.
db.alumnos.insertOne({
  nombres: "Carlos",
  apellidos: "Gómez Rojas",
  sexo: "M",
  casado: false,
  fecha_nacimiento: ISODate("1998-02-10T12:00:00.000Z"),
  materias: ["COM350"],
  padre: { nombre: "Raúl", apellido: "Gómez" }
})


7. Listar alumnos cuyo padre tenga nombre "Luis" o "Miguel".
db.alumnos.find({
  "padre.nombre": { $in: ["Luis", "Miguel"] }
})


8. Mostrar alumnos no casados que tengan "SIS256".
db.alumnos.find({
  casado: false,
  materias: "SIS256"
});

9. Contar alumnos con más de 2 materias.
db.alumnos.countDocuments({
  $expr: {
    $and: [
      { $isArray: "$materias" },
      { $gt: [ { $size: "$materias" }, 2 ] }
    ]
  }
})


10. Mostrar los 10 más viejos con nombres y fecha_nacimiento.
db.alumnos.find(
  {
    nombres: { $exists: true },
    fecha_nacimiento: { $exists: true }
  },
  { nombres: 1, fecha_nacimiento: 1, _id: 0 }
).sort({ fecha_nacimiento: 1 }).limit(10)


11. Buscar alumnos con "COM350" y "SIS00".
db.alumnos.find(
  { materias: { $all: ["COM350", "SIS00"] } },
  { nombres: 1, apellidos: 1, materias: 1, _id: 0 }
)


12. Mostrar solo nombres y sexo de los alumnos mujeres.
db.alumnos.find(
  { sexo: "F" },
  { nombre: 1, sexo: 1, _id: 0}
);

13. Ordenar todos los alumnos por apellido ascendente.
db.alumnos.find().sort({ apellidos: 1 });

14. Listar alumnos nacidos entre 1998 y 2003.
db.alumnos.find({
  fecha_nacimiento: {
    $gte: ISODate('1998-01-01T00:00:00.000Z'),
    $lte: ISODate('2003-12-31T23:59:59.999Z')
  }
})

15. Mostrar alumnos cuyo apellido termine en "ez".
db.alumnos.find({
  apellidos: /ez$/
});

16. Contar alumnos casados y con "SIS258".
db.alumnos.countDocuments({
  casado: true,
  materias: "SIS258"
});

17. Cambiar el nombre "Luis" por "Luis Alberto".
db.alumnos.updateMany(
  { nombre: "Luis" },
  { $set: { nombre: "Luis Alberto" } }
);

18. Agregar "SIS777" a todos los alumnos con "COM350".
db.alumnos.updateMany(
  { materias: "COM350" },
  { $addToSet: { materias: "SIS777" } }
);

19. Poner casado: false a todos los alumnos con menos de 2 materias.
db.alumnos.updateMany(
  {
    $expr: {
      $and: [
        { $isArray: "$materias" },
        { $lt: [ { $size: "$materias" }, 2 ] }
      ]
    }
  },
  { $set: { casado: false } }
)


20. Quitar "SIS256" de todos los que la tengan.
db.alumnos.updateMany(
  { materias: 'SIS256' },
  { $pull: { materias: 'SIS256' } }
)

21. Cambiar el nombre del padre "Juan" a "Juan José".
db.alumnos.updateMany(
  { "padre.nombre": "Juan" },
  { $set: { "padre.nombre": "Juan José" } }
);

22. Agregar un campo activo: true a todos los documentos.
db.alumnos.updateMany(
  {},
  { $set: { activo: true } }
);

23. Eliminar todos los alumnos hombres.
db.alumnos.deleteMany({ sexo: "M" });

24. Eliminar a quien tenga "SIS777" como materia.
db.alumnos.deleteMany({ materias: "SIS777" });

25. Eliminar a los alumnos cuyo padre tenga apellido "Ramírez".
db.alumnos.deleteMany({ "padre.apellido": "Ramírez" });

26. Eliminar a los que nacieron después de 2004.
db.alumnos.deleteMany({
  fecha_nacimiento: { $gt: ISODate('2004-12-31T23:59:59.999Z') }
})

27. Eliminar todos los casados.
db.alumnos.deleteMany({ casado: true });

28. Eliminar al primer alumno que tenga "SIS258".
db.alumnos.deleteOne({ materias: "SIS258" });
